name: Terraform CI/CD with tfsec and Bandit

on:
  push:
    branches: [main]
    paths:
      - 'user*/**'  # Triggers if any user folder changes
  workflow_dispatch:  # Manual trigger

jobs:
  detect-folders:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.set-folders.outputs.folders }}
    steps:
      - uses: actions/checkout@v4
        with:
           fetch-depth: 0

      - id: set-folders
        run: |
          echo "Detecting user folders with changes..."
          folders=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^user' | cut -d/ -f1 | sort -u | uniq | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "folders=$folders" >> $GITHUB_OUTPUT

  run-ci:
    name: Run Terraform + tfsec per Folder
    needs: detect-folders
    runs-on: ubuntu-latest
    if: needs.detect-folders.outputs.folders != '[]'
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-folders.outputs.folders) }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ matrix.folder }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ matrix.folder }}

      - name: Terraform Plan
        run: terraform plan -var-file="vars/dev.tfvars"
        working-directory: ${{ matrix.folder }}

      - name: Install tfsec
        run: |
          curl -sSL https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64 -o tfsec
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin/

      - name: Run tfsec
        run: tfsec --format json --out tfsec-results.json || true
        working-directory: ${{ matrix.folder }}

      - name: Upload tfsec results
        uses: actions/upload-artifact@v4
        with:
          name: tfsec-results-${{ matrix.folder }}
          path: ${{ matrix.folder }}/tfsec-results.json

      - name: Run Bandit (if Python code is found)
        run: |
          echo "Searching for Python files in ${{ matrix.folder }}..."
          PY_FILES=$(find ${{ matrix.folder }} -type f -name "*.py")
          if [ -n "$PY_FILES" ]; then
            echo "Python files found, running Bandit..."
            bandit -r ${{ matrix.folder }} -o bandit-results.txt -f txt || true
          else
            echo "No Python files found."
            touch bandit-results.txt
          fi

      - name: Upload Bandit results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-results-${{ matrix.folder }}
          path: bandit-results.txt
